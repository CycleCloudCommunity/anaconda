#!/bin/bash
### BEGIN INIT INFO
# Provides:          jupyter
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start jupyter
# Description:       This file should be used to construct scripts to be
#                    placed in /etc/init.d.
### END INIT INFO


PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin
source /etc/profile.d/anaconda-env.sh

NAME=jupyter-notebook
CONDA_USER=<%= node['anaconda']['owner'] %>
CONDA_HOME=<%= node['anaconda']['home'] %>
DAEMON=$( which jupyter )
DAEMON_ARGS="notebook  --no-browser --config=${CONDA_HOME}/.jupyter/jupyter_notebook_config.py --port=<%= node['anaconda']['notebook']['port'] %> --notebook-dir=${CONDA_HOME}/.local"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
LOG_PATH=/var/log/jupyter


# Source function library.
. /etc/rc.d/init.d/functions

#
# Function that starts the daemon/service
#
do_start()
{
    pushd ${CONDA_HOME} > /dev/null
    sudo -u "${CONDA_USER}" -- "${DAEMON}" ${DAEMON_ARGS} > ${LOG_PATH} 2>&1 &
    echo $! > ${PIDFILE}
    # daemon --pidfile=${PIDFILE} --user=${CONDA_USER} "${DAEMON}" ${DAEMON_ARGS} > ${LOG_PATH} 2>&1 &
    popd > /dev/null
    
}

#
# Function that stops the daemon/service
#
do_stop()
{
    killproc -p ${PIDFILE}
    rm -f ${PIDFILE}
    
}

case "$1" in
    start)
	     [ "$VERBOSE" != no ] && echo "Starting $DESC" "$NAME"
	     do_start
	     ;;
    stop)
	     [ "$VERBOSE" != no ] && echo "Stopping $DESC" "$NAME"
	     do_stop
	     ;;
    status)
        if daemon --name=${NAME} --pidfile=${PIDFILE} --user=${CONDA_USER} --running; then
            echo "$NAME running"
            exit 0
        else
            echo "$NAME stopped"
            exit 1
        fi
	     ;;
    restart|force-reload)
	     #
	     # If the "reload" option is implemented then remove the
	     # 'force-reload' alias
	     #
	     echo "Restarting $DESC" "$NAME"
	     do_stop
        do_start
	     ;;
    *)
	     echo "Usage: $SCRIPTNAME {start|stop|status|restart}" >&2
	     exit 3
	     ;;
esac


