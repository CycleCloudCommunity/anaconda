#!/bin/bash
# jupyter daemon
# chkconfig: 345 20 80
# description: jupyter daemon
# processname: jupyter-server

DAEMON_DIR=<%= node['anaconda']['home'] %>

NAME=jupyter-notebook
DESC="Jupyter Notebook backed with Spark"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

source /etc/profile.d/anaconda-env.sh

PYSPARK_PYTHON=<%= node['anaconda']['install_root'] %>/<%= node['anaconda']['version'] %>/bin/python
PYSPARK_DRIVER_PYTHON=jupyter
PYSPARK_DRIVER_PYTHON_OPTS="notebook --no-browser --port=<%= node['anaconda']['notebook']['port'] %>"
SPARK_MASTER=<%= node['spark']['master_url'] %>
EXEC_MEM=<%= node['anaconda']['notebook']['memory'] %>
CONDA_USER=<%= node['anaconda']['owner'] %>

case "$1" in
start)
	printf "%-50s" "Starting $NAME..."
    cd $DAEMON_DIR
	PID=`sudo -i -u $CONDA_USER PYSPARK_PYTHON="${PYSPARK_PYTHON}" PYSPARK_DRIVER_PYTHON=jupyter PYSPARK_DRIVER_PYTHON_OPTS="${PYSPARK_DRIVER_PYTHON_OPTS}" pyspark  --master ${SPARK_MASTER} --executor-memory $EXEC_MEM --driver-memory $EXEC_MEM --packages com.amazonaws:aws-java-sdk-pom:1.10.34,org.apache.hadoop:hadoop-aws:2.7.2 > /var/log/${NAME}.log 2>&1 & echo $!`
	#echo "Saving PID" $PID " to " $PIDFILE
        if [ -z $PID ]; then
            printf "%s\n" "Fail"
        else
            echo $PID > $PIDFILE
            printf "%s\n" "Ok"
        fi
;;
status)
        printf "%-50s" "Checking $NAME..."
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                printf "%s\n" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service not running"
        fi
;;
stop)
        printf "%-50s" "Stopping $NAME"
            PID=`cat $PIDFILE`
            cd $DAEMON_DIR
        if [ -f $PIDFILE ]; then
            kill -HUP $PID
            printf "%s\n" "Ok"
            rm -f $PIDFILE
        else
            printf "%s\n" "pidfile not found"
        fi
;;

restart)
  	$0 stop
  	$0 start
;;

*)
        echo "Usage: $0 {status|start|stop|restart}"
        exit 1
esac